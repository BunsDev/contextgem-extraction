interactions:
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find a list
      of consecutively ordered paragraphs from a document and a list of aspects. Your
      task is to:\\n\\n1. Read and understand the aspects\\n- Each aspect is identified
      by an Aspect ID (for example, \\\"A0\\\", \\\"A1\\\", etc.), includes a name,
      and has a description.\\n- Aspects describe themes, topics, or criteria that
      might be addressed in the paragraphs.\\n\\n2. Examine each paragraph\\n- Each
      paragraph is identified by a paragraph ID (for example, \\\"P0\\\", \\\"P1\\\",
      etc.), followed by the full text of the paragraph and, optionally, additional
      information about the paragraph, which may be helpful during your analysis.\\n-
      Note that paragraphs are listed in the same order they appear in the original
      document; therefore, context from surrounding paragraphs may influence whether
      a particular paragraph is relevant to an aspect.\\n\\n3. Map paragraphs to aspects\\n-
      A paragraph can address one, multiple, or none of the aspects.\\n- If a paragraph
      clearly relates to an aspect (based on the aspect's name and description), include
      that paragraph's ID under the aspect's list of paragraph IDs.\\n- If a paragraph
      does not relate to an aspect, do not include it under that aspect's list.\\n\\n4.
      Produce the final answer in the specified JSON format\\n- Your output must be
      a JSON array of objects, each object corresponding to a single aspect.\\n- For
      each aspect (in the order they are provided), include:\\n    -- aspect_id: The
      aspect's unique identifier, e.g., \\\"A0\\\".\\n    -- paragraph_ids: An array
      of the paragraph IDs that address or relate to the aspect, e.g., [\\\"P0\\\",
      \\\"P2\\\"].\\n    -- If an aspect has no related paragraphs, still include
      it with an empty paragraph_ids array ([]).\\n- Do not add extra commentary,
      code block markers, or any other formatting beyond the JSON array.\\n\\nUse
      the following answer format as a guide for your final answer (remember: no surrounding
      text or ```json delimiters should be included).\\n\\n======\\nANSWER FORMAT
      (MANDATORY):\\n[\\n    {\\n        \\\"aspect_id\\\": str,\\n        \\\"paragraph_ids:
      [\\n            str,\\n            ...\\n        ]\\n    },\\n    ...\\n]\\n======\\n\\n______\\nDOCUMENT
      ASPECTS:\\n````\\n- Aspect ID: A0\\nAspect name: Term and termination\\nAspect
      description:\\nAll clauses addressing term and termination of the contract.\\n````\\n\\n______\\n\\n------\\nDOCUMENT
      PARAGRAPHS:\\n''''\\n- Paragraph ID: P0\\n~~~\\nParagraph text:\\n5,000 / 5,000\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P1\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P2\\n~~~\\nParagraph text:\\n\u672C\u4FDD\u5BC6\u534F\u8BAE (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D)
      \u4E8E 2024 \u5E74 7 \u6708 16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P3\\n~~~\\nParagraph text:\\n\u7532\u65B9\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P4\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P5\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P6\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P7\\n~~~\\nParagraph text:\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P8\\n~~~\\nParagraph text:\\n\u7535\u8BDD\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P9\\n~~~\\nParagraph text:\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P10\\n~~~\\nParagraph text:\\n\u4E59\u65B9\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P11\\n~~~\\nParagraph text:\\nExample.Com LLC\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P12\\n~~~\\nParagraph text:\\n5678 Random Drive\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P13\\n~~~\\nParagraph text:\\nNew York, NY 00000\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P14\\n~~~\\nParagraph text:\\n\u8054\u7CFB\u4EBA\uFF1AJane Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P15\\n~~~\\nParagraph text:\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P16\\n~~~\\nParagraph text:\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P17\\n~~~\\nParagraph text:\\n1. \u76EE\u7684\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P18\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P19\\n~~~\\nParagraph text:\\n2. \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P20\\n~~~\\nParagraph text:\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P21\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P22\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P23\\n~~~\\nParagraph text:\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P24\\n~~~\\nParagraph text:\\n3. \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P25\\n~~~\\nParagraph text:\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P26\\n~~~\\nParagraph text:\\na. \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P27\\n~~~\\nParagraph text:\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P28\\n~~~\\nParagraph text:\\nc. \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P29\\n~~~\\nParagraph text:\\n4. \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P30\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P31\\n~~~\\nParagraph text:\\na. \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P32\\n~~~\\nParagraph text:\\nb. \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P33\\n~~~\\nParagraph text:\\nc. \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P34\\n~~~\\nParagraph text:\\nd. \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P35\\n~~~\\nParagraph text:\\n6. \u6750\u6599\u8FD4\u8FD8\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P36\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P37\\n~~~\\nParagraph text:\\n7. \u65E0\u8BB8\u53EF\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P38\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P39\\n~~~\\nParagraph text:\\n8. \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P40\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P41\\n~~~\\nParagraph text:\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n~~~\\n''''\\n\\n''''\\n- Paragraph ID: P42\\n~~~\\nParagraph
      text:\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n~~~\\n''''\\n\\n''''\\n- Paragraph
      ID: P43\\n~~~\\nParagraph text:\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P44\\n~~~\\nParagraph text:\\nb. \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P45\\n~~~\\nParagraph text:\\nc. \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P46\\n~~~\\nParagraph text:\\nd. \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P47\\n~~~\\nParagraph text:\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P48\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P49\\n~~~\\nParagraph text:\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P50\\n~~~\\nParagraph text:\\n\u59D3\u540D\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P51\\n~~~\\nParagraph text:\\n\u804C\u52A1\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P52\\n~~~\\nParagraph text:\\n\u65E5\u671F\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P53\\n~~~\\nParagraph text:\\nExample.Com LLC\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P54\\n~~~\\nParagraph text:\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P55\\n~~~\\nParagraph text:\\n\u59D3\u540D\uFF1AJane Doe\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P56\\n~~~\\nParagraph text:\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P57\\n~~~\\nParagraph text:\\n\u65E5\u671F\uFF1A___________________________\\n~~~\\n''''\\n\\n------\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '14434'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"aspect_id\":
        \"A0\",\n        \"paragraph_ids\": [\n            \"P36\",\n            \"P41\"\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921636, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 34,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3440, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1024},
        "total_tokens": 3474}}'
    headers:
      Content-Length:
      - '1229'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '571'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find a list
      of consecutively ordered paragraphs from a document and a list of aspects. Your
      task is to:\\n\\n1. Read and understand the aspects\\n- Each aspect is identified
      by an Aspect ID (for example, \\\"A0\\\", \\\"A1\\\", etc.), includes a name,
      and has a description.\\n- Aspects describe themes, topics, or criteria that
      might be addressed in the paragraphs.\\n\\n2. Examine each paragraph\\n- Each
      paragraph is identified by a paragraph ID (for example, \\\"P0\\\", \\\"P1\\\",
      etc.), followed by the full text of the paragraph and, optionally, additional
      information about the paragraph, which may be helpful during your analysis.\\n-
      Note that paragraphs are listed in the same order they appear in the original
      document; therefore, context from surrounding paragraphs may influence whether
      a particular paragraph is relevant to an aspect.\\n\\n3. Map paragraphs to aspects\\n-
      A paragraph can address one, multiple, or none of the aspects.\\n- If a paragraph
      clearly relates to an aspect (based on the aspect's name and description), include
      the paragraph's ID and provide a justification, detailing why the paragraph
      is relevant to the aspect.\\n- If a paragraph does not relate to an aspect,
      do not include it under that aspect's list.\\n\\n4. Produce the final answer
      in the specified JSON format\\n- Your output must be a JSON array of objects,
      each object corresponding to a single aspect.\\n- For each aspect (in the order
      they are provided), include:\\n    -- aspect_id: The aspect's unique identifier,
      e.g., \\\"A0\\\".\\n    -- paragraphs: An array of objects for each paragraph
      that addresses or relates to the aspect. Each object should include:\\n        ---
      paragraph_id: The provided paragraph ID, e.g., \\\"P0\\\", \\\"P2\\\".\\n        ---
      justification: A justification of why the paragraph is relevant to the aspect.
      Ensure the justification is specific and directly ties the content of the paragraph
      to the aspect's defining features. Never reference any of the structural IDs
      provided in this prompt (such as aspect IDs like \\\"A0\\\", or paragraph IDs
      like \\\"P0\\\") in the justification.\\n            ---- Justification should
      be brief, i.e. highlight only the essential details.\\n            ---- Justification
      should be no longer than 2 sentences.\\n            ---- Justification should
      be in the original language of the document.\\n    -- If an aspect has no related
      paragraphs, still include it with an empty paragraphs array ([]).\\n- Do not
      add extra commentary, code block markers, or any other formatting beyond the
      JSON array.\\n\\nUse the following answer format as a guide for your final answer
      (remember: no surrounding text or ```json delimiters should be included).\\n\\n======\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"aspect_id\\\": str,\\n        \\\"paragraphs:
      [\\n            {\\n                \\\"paragraph_id\\\": str,\\n                \\\"justification\\\":
      str\\n            },\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n======\\n\\n______\\nDOCUMENT
      ASPECTS:\\n````\\n- Aspect ID: A0\\nAspect name: Parties\\nAspect description:\\nParties
      to the agreement\\n````\\n\\n______\\n\\n------\\nDOCUMENT PARAGRAPHS:\\n''''\\n-
      Paragraph ID: P0\\n~~~\\nParagraph text:\\n5,000 / 5,000\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P1\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P2\\n~~~\\nParagraph text:\\n\u672C\u4FDD\u5BC6\u534F\u8BAE (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D)
      \u4E8E 2024 \u5E74 7 \u6708 16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P3\\n~~~\\nParagraph text:\\n\u7532\u65B9\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P4\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P5\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P6\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P7\\n~~~\\nParagraph text:\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P8\\n~~~\\nParagraph text:\\n\u7535\u8BDD\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P9\\n~~~\\nParagraph text:\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P10\\n~~~\\nParagraph text:\\n\u4E59\u65B9\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P11\\n~~~\\nParagraph text:\\nExample.Com LLC\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P12\\n~~~\\nParagraph text:\\n5678 Random Drive\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P13\\n~~~\\nParagraph text:\\nNew York, NY 00000\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P14\\n~~~\\nParagraph text:\\n\u8054\u7CFB\u4EBA\uFF1AJane Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P15\\n~~~\\nParagraph text:\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P16\\n~~~\\nParagraph text:\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P17\\n~~~\\nParagraph text:\\n1. \u76EE\u7684\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P18\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P19\\n~~~\\nParagraph text:\\n2. \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P20\\n~~~\\nParagraph text:\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P21\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P22\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P23\\n~~~\\nParagraph text:\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P24\\n~~~\\nParagraph text:\\n3. \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P25\\n~~~\\nParagraph text:\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P26\\n~~~\\nParagraph text:\\na. \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P27\\n~~~\\nParagraph text:\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P28\\n~~~\\nParagraph text:\\nc. \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P29\\n~~~\\nParagraph text:\\n4. \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P30\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P31\\n~~~\\nParagraph text:\\na. \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P32\\n~~~\\nParagraph text:\\nb. \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P33\\n~~~\\nParagraph text:\\nc. \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P34\\n~~~\\nParagraph text:\\nd. \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P35\\n~~~\\nParagraph text:\\n6. \u6750\u6599\u8FD4\u8FD8\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P36\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P37\\n~~~\\nParagraph text:\\n7. \u65E0\u8BB8\u53EF\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P38\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P39\\n~~~\\nParagraph text:\\n8. \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P40\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P41\\n~~~\\nParagraph text:\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n~~~\\n''''\\n\\n''''\\n- Paragraph ID: P42\\n~~~\\nParagraph
      text:\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n~~~\\n''''\\n\\n''''\\n- Paragraph
      ID: P43\\n~~~\\nParagraph text:\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P44\\n~~~\\nParagraph text:\\nb. \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P45\\n~~~\\nParagraph text:\\nc. \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P46\\n~~~\\nParagraph text:\\nd. \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P47\\n~~~\\nParagraph text:\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P48\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P49\\n~~~\\nParagraph text:\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P50\\n~~~\\nParagraph text:\\n\u59D3\u540D\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P51\\n~~~\\nParagraph text:\\n\u804C\u52A1\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P52\\n~~~\\nParagraph text:\\n\u65E5\u671F\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P53\\n~~~\\nParagraph text:\\nExample.Com LLC\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P54\\n~~~\\nParagraph text:\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P55\\n~~~\\nParagraph text:\\n\u59D3\u540D\uFF1AJane Doe\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P56\\n~~~\\nParagraph text:\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P57\\n~~~\\nParagraph text:\\n\u65E5\u671F\uFF1A___________________________\\n~~~\\n''''\\n\\n------\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '15211'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n    {\n        \"aspect_id\": \"A0\",\n        \"paragraphs\":
        [\n            {\n                \"paragraph_id\": \"P2\",\n                \"justification\":
        \"\u8be5\u6bb5\u8bf4\u660e\u534f\u8bae\u7531\u4ee5\u4e0b\u5404\u65b9\u7b7e\u7f72\u5e76\u751f\u6548\uff0c\u660e\u786e\u6d89\u53ca\u534f\u8bae\u7684\u5f53\u4e8b\u65b9\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P3\",\n                \"justification\": \"\u8be5\u6bb5\u6807\u660e\u201c\u7532\u65b9\u201d\uff0c\u8868\u660e\u534f\u8bae\u4e2d\u7684\u4e00\u65b9\u5f53\u4e8b\u4eba\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P10\",\n                \"justification\": \"\u8be5\u6bb5\u6807\u660e\u201c\u4e59\u65b9\u201d\uff0c\u8868\u660e\u534f\u8bae\u4e2d\u7684\u53e6\u4e00\u65b9\u5f53\u4e8b\u4eba\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P11\",\n                \"justification\": \"\u8be5\u6bb5\u63d0\u4f9b\u4e86\u4e59\u65b9\u7684\u516c\u53f8\u540d\u79f0\uff0c\u660e\u786e\u4e86\u534f\u8bae\u4e00\u65b9\u7684\u8eab\u4efd\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P14\",\n                \"justification\": \"\u8be5\u6bb5\u63d0\u4f9b\u4e86\u4e59\u65b9\u8054\u7cfb\u4eba\u59d3\u540d\u53ca\u804c\u4f4d\uff0c\u8fdb\u4e00\u6b65\u660e\u786e\u4e86\u534f\u8bae\u5f53\u4e8b\u65b9\u7684\u5177\u4f53\u4fe1\u606f\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P53\",\n                \"justification\": \"\u8be5\u6bb5\u518d\u6b21\u63d0\u53ca\u4e59\u65b9\u516c\u53f8\u540d\u79f0\uff0c\u786e\u8ba4\u534f\u8bae\u4e00\u65b9\u7684\u8eab\u4efd\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P55\",\n                \"justification\": \"\u8be5\u6bb5\u63d0\u4f9b\u4e86\u4e59\u65b9\u7b7e\u7f72\u4eba\u7684\u59d3\u540d\uff0c\u660e\u786e\u534f\u8bae\u7b7e\u7f72\u4ee3\u8868\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P56\",\n                \"justification\": \"\u8be5\u6bb5\u63d0\u4f9b\u4e86\u4e59\u65b9\u7b7e\u7f72\u4eba\u7684\u804c\u52a1\uff0c\u8fdb\u4e00\u6b65\u786e\u8ba4\u7b7e\u7f72\u4eba\u7684\u8eab\u4efd\u3002\"\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921637, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 335,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3581, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1024},
        "total_tokens": 3916}}'
    headers:
      Content-Length:
      - '2833'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '4189'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not found or there are no items to extract,
      leave the array empty ([]).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified under \\\"Amount of extracted
      items\\\". Each extracted item, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item structure:\\n    -- If a specific
      structure is provided for a concept under \\\"Expected structure,\\\" you must
      follow that structure for all extracted items corresponding to that concept.\\n
      \   -- If a rating scale is provided for a concept under \\\"Rating scale,\\\"
      the extracted item value must be within that scale.\\n    -- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \   -- If there are example items (\\\"Extracted concept examples\\\"), try
      to follow the same style and formatting for your extracted items.\\n    -- When
      extracting string values, retain them in the original language of the document
      without translating them.\\n\\n- Types of extracted items:\\n    -- Each concept
      specifies an \\\"extracted item type\\\" (found under \\\"Concept extracted
      item type\\\"). Ensure your extracted items strictly match that type. Python
      types are provided (e.g., str for string, int for integer, float for floating-point
      number, dict for object, etc.).\\n    -- Do not introduce any extra fields or
      modify the specified structure.\\n\\n- Handling missing or multiple items:\\n
      \   -- If a concept is not mentioned at all, your output should still contain
      an entry for that concept with an empty \\\"extracted_items\\\" array.\\n    --
      For concepts that have an \\\"Available labels:\\\" section: if none of the
      predefined labels apply to the content, leave the \\\"extracted_items\\\" array
      empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            ...\\n        ],\\n    },\\n
      \   ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n- Concept ID: C0\\nConcept
      name: Contract term\\n\\nConcept description:\\nContract term\\n\\nAmount of
      extracted items: This concept may have zero, one, or multiple extracted items.\\n\\nConcept
      extracted item type: str\\n````\\n\\n______\\n\\n------\\nDOCUMENT TEXT:\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '8388'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"\u81ea\u7b7e\u7f72\u4e4b\u65e5\u8d77\u6709\u6548\u671f\u4e3a\u4e94
        (5) \u5e74\"\n        ]\n    }\n]", "refusal": null, "role": "assistant"}}],
        "created": 1749921641, "id": "chatcmpl-DUMMY", "model": "gpt-4.1-mini-2025-04-14",
        "object": "chat.completion", "prompt_filter_results": [{"prompt_index": 0,
        "content_filter_results": {"hate": {"filtered": false, "severity": "safe"},
        "jailbreak": {"filtered": false, "detected": false}, "self_harm": {"filtered":
        false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"},
        "violence": {"filtered": false, "severity": "safe"}}}], "system_fingerprint":
        "fp_178c8d546f", "usage": {"completion_tokens": 41, "completion_tokens_details":
        {"accepted_prediction_tokens": 0, "audio_tokens": 0, "reasoning_tokens": 0,
        "rejected_prediction_tokens": 0}, "prompt_tokens": 1608, "prompt_tokens_details":
        {"audio_tokens": 0, "cached_tokens": 1408}, "total_tokens": 1649}}'
    headers:
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '557'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find a list
      of document paragraphs (including sentences) and a list of concepts.\\n\\nYour
      task is to:\\n1. Read through the provided document paragraphs and their sentences.\\n
      \   - Each paragraph is identified by a paragraph ID (for example, \\\"P0\\\",
      \\\"P1\\\", etc.), optionally followed by additional information about the paragraph,
      which may be helpful during your analysis.\\n    - Each paragraph includes sentences,
      each identified by a sentence ID (for example, \\\"P0-S0\\\", \\\"P0-S1\\\",
      etc.), followed by the full text of the sentence and, optionally, additional
      information about the sentence, which may be helpful during your analysis.\\n
      \   - Note that paragraphs are listed in the same order they appear in the original
      document.\\n2. Identify whether each concept in the concepts list is addressed
      within the document paragraphs.\\n3. For each concept that appears, extract
      zero or more items relevant to that concept. The item format and structure are
      specified for each concept.\\n4. Produce a JSON array containing your extracted
      data, in the provided format.\\n\\nIf a concept is not addressed in the document
      paragraphs, you must still include an entry in the final JSON output but with
      an empty \\\"extracted_items\\\" list.\\n\\nFollow these additional rules:\\n\\n-
      Output format:\\nProvide your answer in only the following answer format (do
      not include backticks, code fences, or any introductory/explanatory text).\\n\\n-
      Consistency:\\n    -- Each JSON object in the list must have two keys: \\\"concept_id\\\"
      and \\\"extracted_items\\\".\\n    -- The value of \\\"concept_id\\\" must match
      exactly the ID of the concept (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n
      \   -- The value of \\\"extracted_items\\\" must be an array of objects with
      mandatory fields \\\"value\\\", \\\"justification\\\", and \\\"reference_paragraphs\\\".
      If the concept is not found or there are no items to extract, leave the array
      empty ([]).\\n        --- Guidance regarding the possible amount of extracted
      items for the concept is specified under \\\"Amount of extracted items\\\".
      Each extracted item's object, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n        --- The value of \\\"reference_paragraphs\\\"
      must be an array of objects with mandatory fields \\\"reference_paragraph_id\\\",
      which holds the provided ID of the reference paragraph, and \\\"reference_sentence_ids\\\",
      which holds the provided IDs of the reference sentences within the paragraph.
      Note that not every sentence in the paragraph necessarily serves as a relevant
      reference.\\n\\n- Item object structure:\\n    -- value: Mandatory field holding
      the extracted item.\\n        --- If a specific structure is provided for a
      concept under \\\"Expected structure,\\\" the extracted item value must follow
      that structure for all extracted items corresponding to that concept.\\n        ---
      If a rating scale is provided for a concept under \\\"Rating scale,\\\" the
      extracted item value must be within that scale.\\n        --- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \       --- If there are example items (\\\"Extracted concept examples\\\"),
      the extracted item value should follow the same style and formatting.\\n        ---
      When extracting string values, retain them in the original language of the document
      without translating them.\\n    -- justification: Mandatory field holding a
      justification of why the item was extracted for the concept. Ensure the justification
      is specific and directly ties the extracted item to the concept's defining features.
      Never reference the concept's ID or any of the structural IDs provided in this
      prompt (such as paragraph IDs like \\\"P0\\\", or sentence IDs like \\\"P0-S0\\\")
      in the justification.\\n        --- Justification should be brief, i.e. highlight
      only the essential details.\\n        --- Justification should be no longer
      than 2 sentences.\\n        --- Justification should be in the original language
      of the document.\\n    -- reference_paragraphs: An array of objects for each
      paragraph based on which the item was extracted for the concept. Each object
      should include:\\n        --- reference_paragraph_id: Mandatory field holding
      the provided ID of the reference paragraph. Each paragraph ID must match exactly
      the provided ID for the paragraph (for example, \\\"P0\\\", \\\"P1\\\", etc.).\\n
      \       --- reference_sentence_ids: Mandatory field holding an array of the
      provided IDs of the sentences within the paragraph, based on which the item
      was extracted for the concept. Each sentence ID must match exactly the provided
      ID for the sentence (for example, \\\"P0-S0\\\", \\\"P0-S2\\\", etc.).\\n\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" (found under \\\"Concept extracted item type\\\"). Ensure that the
      value of each of the extracted items for the concept strictly matches that type.
      Python types are provided (e.g., str for string, int for integer, float for
      floating-point number, dict for object, etc.).\\n    -- Do not introduce any
      extra fields or modify the specified structure.\\n\\n- Handling missing or multiple
      items:\\n    -- If a concept is not mentioned at all, your output should still
      contain an entry for that concept with an empty \\\"extracted_items\\\" array.\\n
      \   -- For concepts that have an \\\"Available labels:\\\" section: if none
      of the predefined labels apply to the content, leave the \\\"extracted_items\\\"
      array empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            {\\n                \\\"value\\\":
      ...,\\n                \\\"justification\\\": str,\\n                \\\"reference_paragraphs\\\":
      [\\n                    {\\n                        \\\"reference_paragraph_id\\\":
      str,\\n                        \\\"reference_sentence_ids\\\": [\\n                            str,\\n
      \                           ...\\n                        ]\\n                    },\\n
      \                   ...\\n                ]\\n            },\\n            ...\\n
      \       ],\\n    },\\n    ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n-
      Concept ID: C0\\nConcept name: Duration\\n\\nConcept description:\\nContract
      duration in years\\n\\nAmount of extracted items: This concept may have zero,
      one, or multiple extracted items.\\n\\nConcept extracted item type: int\\n````\\n\\n______\\n\\n------\\nDOCUMENT
      PARAGRAPHS INCLUDING SENTENCES:\\n````\\n- Paragraph ID: P0\\nParagraph sentences:\\n
      \   -- Sentence ID: P0-S0\\n    Sentence text: \u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n````\\n\\n````\\n-
      Paragraph ID: P1\\nParagraph sentences:\\n    -- Sentence ID: P1-S0\\n    Sentence
      text: \u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\\n
      \   -- Sentence ID: P1-S1\\n    Sentence text: \u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n````\\n\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '11684'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            {\n                \"value\":
        5,\n                \"justification\": \"\u534f\u8bae\u660e\u786e\u6307\u51fa\u81ea\u7b7e\u7f72\u4e4b\u65e5\u8d77\u6709\u6548\u671f\u4e3a\u4e94\u5e74\uff0c\u76f4\u63a5\u4f53\u73b0\u4e86\u5408\u540c\u7684\u6301\u7eed\u65f6\u95f4\u3002\",\n                \"reference_paragraphs\":
        [\n                    {\n                        \"reference_paragraph_id\":
        \"P1\",\n                        \"reference_sentence_ids\": [\n                            \"P1-S1\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921642, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 105,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        2241, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1024},
        "total_tokens": 2346}}'
    headers:
      Content-Length:
      - '1681'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '919'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not found or there are no items to extract,
      leave the array empty ([]).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified under \\\"Amount of extracted
      items\\\". Each extracted item, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item structure:\\n    -- If a specific
      structure is provided for a concept under \\\"Expected structure,\\\" you must
      follow that structure for all extracted items corresponding to that concept.\\n
      \   -- If a rating scale is provided for a concept under \\\"Rating scale,\\\"
      the extracted item value must be within that scale.\\n    -- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \   -- If there are example items (\\\"Extracted concept examples\\\"), try
      to follow the same style and formatting for your extracted items.\\n    -- When
      extracting string values, retain them in the original language of the document
      without translating them.\\n\\n- Types of extracted items:\\n    -- Each concept
      specifies an \\\"extracted item type\\\" (found under \\\"Concept extracted
      item type\\\"). Ensure your extracted items strictly match that type. Python
      types are provided (e.g., str for string, int for integer, float for floating-point
      number, dict for object, etc.).\\n    -- Do not introduce any extra fields or
      modify the specified structure.\\n\\n- Handling missing or multiple items:\\n
      \   -- If a concept is not mentioned at all, your output should still contain
      an entry for that concept with an empty \\\"extracted_items\\\" array.\\n    --
      For concepts that have an \\\"Available labels:\\\" section: if none of the
      predefined labels apply to the content, leave the \\\"extracted_items\\\" array
      empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            ...\\n        ],\\n    },\\n
      \   ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n- Concept ID: C0\\nConcept
      name: Contract party name\\n\\nConcept description:\\nContract party name in
      the contract. Exclude information on individual signatories.\\n\\nAmount of
      extracted items: This concept may have zero, one, or multiple extracted items.\\n\\nConcept
      extracted item type: str\\n````\\n\\n````\\n- Concept ID: C1\\nConcept name:
      Contract party name and role\\n\\nConcept description:\\nContract party name
      and role in the contract. Exclude information on individual signatories.\\n\\nAmount
      of extracted items: This concept may have zero, one, or multiple extracted items.\\n\\nExtracted
      concept examples:\\n- custom_data={} content='Company ABC (Supplier)'\\n\\nConcept
      extracted item type: str\\n````\\n\\n______\\n\\n------\\nDOCUMENT TEXT:\\n\u672C\u4FDD\u5BC6\u534F\u8BAE
      (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D) \u4E8E 2024 \u5E74 7 \u6708
      16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n\\n\u7532\u65B9\uFF1A\\n\\n\u4E59\u65B9\uFF1A\\n\\nExample.Com
      LLC\\n\\n\u8054\u7CFB\u4EBA\uFF1AJane Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n\\nExample.Com
      LLC\\n\\n\u59D3\u540D\uFF1AJane Doe\\n\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '8878'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"Example.Com LLC\"\n        ]\n    },\n    {\n        \"concept_id\":
        \"C1\",\n        \"extracted_items\": []\n    }\n]", "refusal": null, "role":
        "assistant"}}], "created": 1749921643, "id": "chatcmpl-DUMMY", "model": "gpt-4.1-mini-2025-04-14",
        "object": "chat.completion", "prompt_filter_results": [{"prompt_index": 0,
        "content_filter_results": {"hate": {"filtered": false, "severity": "safe"},
        "jailbreak": {"filtered": false, "detected": false}, "self_harm": {"filtered":
        false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"},
        "violence": {"filtered": false, "severity": "safe"}}}], "system_fingerprint":
        "fp_178c8d546f", "usage": {"completion_tokens": 51, "completion_tokens_details":
        {"accepted_prediction_tokens": 0, "audio_tokens": 0, "reasoning_tokens": 0,
        "rejected_prediction_tokens": 0}, "prompt_tokens": 1705, "prompt_tokens_details":
        {"audio_tokens": 0, "cached_tokens": 1024}, "total_tokens": 1756}}'
    headers:
      Content-Length:
      - '1303'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '1401'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not found or there are no items to extract,
      leave the array empty ([]).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified under \\\"Amount of extracted
      items\\\". Each extracted item, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item structure:\\n    -- If a specific
      structure is provided for a concept under \\\"Expected structure,\\\" you must
      follow that structure for all extracted items corresponding to that concept.\\n
      \   -- If a rating scale is provided for a concept under \\\"Rating scale,\\\"
      the extracted item value must be within that scale.\\n    -- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \   -- If there are example items (\\\"Extracted concept examples\\\"), try
      to follow the same style and formatting for your extracted items.\\n    -- When
      extracting string values, retain them in the original language of the document
      without translating them.\\n\\n- Types of extracted items:\\n    -- Each concept
      specifies an \\\"extracted item type\\\" (found under \\\"Concept extracted
      item type\\\"). Ensure your extracted items strictly match that type. Python
      types are provided (e.g., str for string, int for integer, float for floating-point
      number, dict for object, etc.).\\n    -- Do not introduce any extra fields or
      modify the specified structure.\\n\\n- Handling missing or multiple items:\\n
      \   -- If a concept is not mentioned at all, your output should still contain
      an entry for that concept with an empty \\\"extracted_items\\\" array.\\n    --
      For concepts that have an \\\"Available labels:\\\" section: if none of the
      predefined labels apply to the content, leave the \\\"extracted_items\\\" array
      empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            ...\\n        ],\\n    },\\n
      \   ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n- Concept ID: C0\\nConcept
      name: Title\\n\\nConcept description:\\nContract title\\n\\nAmount of extracted
      items: This concept may have zero, one, or multiple extracted items.\\n\\nConcept
      extracted item type: str\\n````\\n\\n````\\n- Concept ID: C1\\nConcept name:
      Key aspects\\n\\nConcept description:\\nNames of key aspects covered in the
      document\\n\\nExpected structure:\\n{\\n  \\\"aspect_names\\\": [\\n    str,\\n
      \   ...\\n  ]\\n}\\n\\nAmount of extracted items: This concept may have zero,
      one, or multiple extracted items.\\n\\nConcept extracted item type: dict\\n````\\n\\n______\\n\\n------\\nDOCUMENT
      TEXT:\\n5,000 / 5,000\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n\\n\u672C\u4FDD\u5BC6\u534F\u8BAE
      (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D) \u4E8E 2024 \u5E74 7 \u6708
      16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n\\n\u7532\u65B9\uFF1A\\n\\n_____\\n_____\\n_____\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n\u7535\u8BDD\uFF1A_____\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n\\n\u4E59\u65B9\uFF1A\\n\\nExample.Com
      LLC\\n5678 Random Drive\\nNew York, NY 00000\\n\u8054\u7CFB\u4EBA\uFF1AJane
      Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n\\n1.
      \u76EE\u7684\uFF1A\\n\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n\\n2.
      \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n3.
      \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n\\na.
      \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n\\nc.
      \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n\\n4.
      \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n\\na.
      \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n\\nb.
      \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n\\nc.
      \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n\\nd.
      \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n6.
      \u6750\u6599\u8FD4\u8FD8\uFF1A\\n\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n\\n7.
      \u65E0\u8BB8\u53EF\uFF1A\\n\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n\\n8.
      \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n\\nb.
      \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n\\nc.
      \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n\\nd.
      \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n\\n_____\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1A_____\\n\u804C\u52A1\uFF1A_____\\n\u65E5\u671F\uFF1A___________________________\\n\\nExample.Com
      LLC\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1AJane
      Doe\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n\u65E5\u671F\uFF1A___________________________\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '13118'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n  {\n    \"concept_id\": \"C0\",\n    \"extracted_items\":
        [\n      \"\u4fdd\u5bc6\u534f\u8bae (NDA)\"\n    ]\n  },\n  {\n    \"concept_id\":
        \"C1\",\n    \"extracted_items\": [\n      {\n        \"aspect_names\": [\n          \"\u76ee\u7684\",\n          \"\u673a\u5bc6\u4fe1\u606f\u7684\u5b9a\u4e49\",\n          \"\u63a5\u6536\u65b9\u7684\u4e49\u52a1\",\n          \"\u4fdd\u5bc6\u4fe1\u606f\u7684\u6392\u9664\",\n          \"\u6750\u6599\u8fd4\u8fd8\",\n          \"\u65e0\u8bb8\u53ef\",\n          \"\u9002\u7528\u6cd5\u5f8b\u548c\u4e89\u8bae\",\n          \"\u5176\u4ed6\u4e8b\u9879\"\n        ]\n      }\n    ]\n  }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921644, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 123,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        2821, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1408},
        "total_tokens": 2944}}'
    headers:
      Content-Length:
      - '1716'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '1162'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array of objects with mandatory fields \\\"value\\\" and \\\"justification\\\".
      If the concept is not found or there are no items to extract, leave the array
      empty ([]).\\n        --- Guidance regarding the possible amount of extracted
      items for the concept is specified under \\\"Amount of extracted items\\\".
      Each extracted item's object, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item object structure:\\n    -- value:
      Mandatory field holding the extracted item.\\n        --- If a specific structure
      is provided for a concept under \\\"Expected structure,\\\" the extracted item
      value must follow that structure for all extracted items corresponding to that
      concept.\\n        --- If a rating scale is provided for a concept under \\\"Rating
      scale,\\\" the extracted item value must be within that scale.\\n        ---
      If available labels are provided for a concept under \\\"Available labels,\\\"
      the extracted item value must be a list containing only labels from the predefined
      set. If none of the predefined labels apply, do not extract any items for that
      concept.\\n        --- If there are example items (\\\"Extracted concept examples\\\"),
      the extracted item value should follow the same style and formatting.\\n        ---
      When extracting string values, retain them in the original language of the document
      without translating them.\\n    -- justification: Mandatory field holding a
      justification of why the item was extracted for the concept. Ensure the justification
      is specific and directly ties the extracted item to the concept's defining features.
      Never reference the concept's ID or any of the structural IDs provided in this
      prompt (such as paragraph IDs like \\\"P0\\\", or sentence IDs like \\\"P0-S0\\\")
      in the justification.\\n        --- Justification should be brief, i.e. highlight
      only the essential details.\\n        --- Justification should be no longer
      than 2 sentences.\\n        --- Justification should be in the original language
      of the document.\\n\\n- Types of extracted items:\\n    -- Each concept specifies
      an \\\"extracted item type\\\" (found under \\\"Concept extracted item type\\\").
      Ensure that the value of each of the extracted items for the concept strictly
      matches that type. Python types are provided (e.g., str for string, int for
      integer, float for floating-point number, dict for object, etc.).\\n    -- Do
      not introduce any extra fields or modify the specified structure.\\n\\n- Handling
      missing or multiple items:\\n    -- If a concept is not mentioned at all, your
      output should still contain an entry for that concept with an empty \\\"extracted_items\\\"
      array.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if none of the predefined labels apply to the content, leave the \\\"extracted_items\\\"
      array empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            {\\n                \\\"value\\\":
      ...,\\n                \\\"justification\\\": str\\n            },\\n            ...\\n
      \       ],\\n    },\\n    ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n-
      Concept ID: C0\\nConcept name: Start date\\n\\nConcept description:\\nContract
      start date\\n\\nAmount of extracted items: This concept may have zero, one,
      or multiple extracted items.\\n\\nConcept extracted item type: str\\n````\\n\\n______\\n\\n------\\nDOCUMENT
      TEXT:\\n5,000 / 5,000\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n\\n\u672C\u4FDD\u5BC6\u534F\u8BAE
      (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D) \u4E8E 2024 \u5E74 7 \u6708
      16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n\\n\u7532\u65B9\uFF1A\\n\\n_____\\n_____\\n_____\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n\u7535\u8BDD\uFF1A_____\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n\\n\u4E59\u65B9\uFF1A\\n\\nExample.Com
      LLC\\n5678 Random Drive\\nNew York, NY 00000\\n\u8054\u7CFB\u4EBA\uFF1AJane
      Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n\\n1.
      \u76EE\u7684\uFF1A\\n\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n\\n2.
      \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n3.
      \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n\\na.
      \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n\\nc.
      \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n\\n4.
      \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n\\na.
      \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n\\nb.
      \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n\\nc.
      \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n\\nd.
      \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n6.
      \u6750\u6599\u8FD4\u8FD8\uFF1A\\n\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n\\n7.
      \u65E0\u8BB8\u53EF\uFF1A\\n\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n\\n8.
      \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n\\nb.
      \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n\\nc.
      \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n\\nd.
      \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n\\n_____\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1A_____\\n\u804C\u52A1\uFF1A_____\\n\u65E5\u671F\uFF1A___________________________\\n\\nExample.Com
      LLC\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1AJane
      Doe\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n\u65E5\u671F\uFF1A___________________________\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '13754'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            {\n                \"value\":
        \"2024 \u5e74 7 \u6708 16 \u65e5\",\n                \"justification\": \"\u534f\u8bae\u6587\u672c\u5f00\u5934\u660e\u786e\u6307\u51fa\u672c\u4fdd\u5bc6\u534f\u8bae\u4e8e2024\u5e747\u670816\u65e5\u7b7e\u7f72\u5e76\u751f\u6548\u3002\"\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921645, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 75,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        2924, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 0}, "total_tokens":
        2999}}'
    headers:
      Content-Length:
      - '1394'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '724'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find a list
      of consecutively ordered paragraphs from a document and a list of aspects. Your
      task is to:\\n\\n1. Read and understand the aspects\\n- Each aspect is identified
      by an Aspect ID (for example, \\\"A0\\\", \\\"A1\\\", etc.), includes a name,
      and has a description.\\n- Aspects describe themes, topics, or criteria that
      might be addressed in the paragraphs.\\n\\n2. Examine each paragraph\\n- Each
      paragraph is identified by a paragraph ID (for example, \\\"P0\\\", \\\"P1\\\",
      etc.), followed by the full text of the paragraph and, optionally, additional
      information about the paragraph, which may be helpful during your analysis.\\n-
      Note that paragraphs are listed in the same order they appear in the original
      document; therefore, context from surrounding paragraphs may influence whether
      a particular paragraph is relevant to an aspect.\\n\\n3. Map paragraphs to aspects\\n-
      A paragraph can address one, multiple, or none of the aspects.\\n- If a paragraph
      clearly relates to an aspect (based on the aspect's name and description), include
      that paragraph's ID under the aspect's list of paragraph IDs.\\n- If a paragraph
      does not relate to an aspect, do not include it under that aspect's list.\\n\\n4.
      Produce the final answer in the specified JSON format\\n- Your output must be
      a JSON array of objects, each object corresponding to a single aspect.\\n- For
      each aspect (in the order they are provided), include:\\n    -- aspect_id: The
      aspect's unique identifier, e.g., \\\"A0\\\".\\n    -- paragraph_ids: An array
      of the paragraph IDs that address or relate to the aspect, e.g., [\\\"P0\\\",
      \\\"P2\\\"].\\n    -- If an aspect has no related paragraphs, still include
      it with an empty paragraph_ids array ([]).\\n- Do not add extra commentary,
      code block markers, or any other formatting beyond the JSON array.\\n\\nUse
      the following answer format as a guide for your final answer (remember: no surrounding
      text or ```json delimiters should be included).\\n\\n======\\nANSWER FORMAT
      (MANDATORY):\\n[\\n    {\\n        \\\"aspect_id\\\": str,\\n        \\\"paragraph_ids:
      [\\n            str,\\n            ...\\n        ]\\n    },\\n    ...\\n]\\n======\\n\\n______\\nDOCUMENT
      ASPECTS:\\n````\\n- Aspect ID: A0\\nAspect name: Term and termination\\nAspect
      description:\\nAll clauses addressing term and termination of the contract.\\n````\\n\\n______\\n\\n------\\nDOCUMENT
      PARAGRAPHS:\\n''''\\n- Paragraph ID: P0\\n~~~\\nParagraph text:\\n5,000 / 5,000\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P1\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P2\\n~~~\\nParagraph text:\\n\u672C\u4FDD\u5BC6\u534F\u8BAE (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D)
      \u4E8E 2024 \u5E74 7 \u6708 16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P3\\n~~~\\nParagraph text:\\n\u7532\u65B9\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P4\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P5\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P6\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P7\\n~~~\\nParagraph text:\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P8\\n~~~\\nParagraph text:\\n\u7535\u8BDD\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P9\\n~~~\\nParagraph text:\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P10\\n~~~\\nParagraph text:\\n\u4E59\u65B9\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P11\\n~~~\\nParagraph text:\\nExample.Com LLC\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P12\\n~~~\\nParagraph text:\\n5678 Random Drive\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P13\\n~~~\\nParagraph text:\\nNew York, NY 00000\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P14\\n~~~\\nParagraph text:\\n\u8054\u7CFB\u4EBA\uFF1AJane Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P15\\n~~~\\nParagraph text:\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P16\\n~~~\\nParagraph text:\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P17\\n~~~\\nParagraph text:\\n1. \u76EE\u7684\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P18\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P19\\n~~~\\nParagraph text:\\n2. \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P20\\n~~~\\nParagraph text:\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P21\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P22\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P23\\n~~~\\nParagraph text:\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P24\\n~~~\\nParagraph text:\\n3. \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P25\\n~~~\\nParagraph text:\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P26\\n~~~\\nParagraph text:\\na. \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P27\\n~~~\\nParagraph text:\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P28\\n~~~\\nParagraph text:\\nc. \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P29\\n~~~\\nParagraph text:\\n4. \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P30\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P31\\n~~~\\nParagraph text:\\na. \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P32\\n~~~\\nParagraph text:\\nb. \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P33\\n~~~\\nParagraph text:\\nc. \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P34\\n~~~\\nParagraph text:\\nd. \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P35\\n~~~\\nParagraph text:\\n6. \u6750\u6599\u8FD4\u8FD8\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P36\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P37\\n~~~\\nParagraph text:\\n7. \u65E0\u8BB8\u53EF\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P38\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P39\\n~~~\\nParagraph text:\\n8. \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P40\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P41\\n~~~\\nParagraph text:\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n~~~\\n''''\\n\\n''''\\n- Paragraph ID: P42\\n~~~\\nParagraph
      text:\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n~~~\\n''''\\n\\n''''\\n- Paragraph
      ID: P43\\n~~~\\nParagraph text:\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P44\\n~~~\\nParagraph text:\\nb. \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P45\\n~~~\\nParagraph text:\\nc. \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P46\\n~~~\\nParagraph text:\\nd. \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P47\\n~~~\\nParagraph text:\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P48\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P49\\n~~~\\nParagraph text:\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P50\\n~~~\\nParagraph text:\\n\u59D3\u540D\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P51\\n~~~\\nParagraph text:\\n\u804C\u52A1\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P52\\n~~~\\nParagraph text:\\n\u65E5\u671F\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P53\\n~~~\\nParagraph text:\\nExample.Com LLC\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P54\\n~~~\\nParagraph text:\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P55\\n~~~\\nParagraph text:\\n\u59D3\u540D\uFF1AJane Doe\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P56\\n~~~\\nParagraph text:\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P57\\n~~~\\nParagraph text:\\n\u65E5\u671F\uFF1A___________________________\\n~~~\\n''''\\n\\n------\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '14434'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"aspect_id\":
        \"A0\",\n        \"paragraph_ids\": [\n            \"P36\",\n            \"P41\"\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921647, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 34,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3440, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1024},
        "total_tokens": 3474}}'
    headers:
      Content-Length:
      - '1229'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '533'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find a list
      of consecutively ordered paragraphs from a document and a list of aspects. Your
      task is to:\\n\\n1. Read and understand the aspects\\n- Each aspect is identified
      by an Aspect ID (for example, \\\"A0\\\", \\\"A1\\\", etc.), includes a name,
      and has a description.\\n- Aspects describe themes, topics, or criteria that
      might be addressed in the paragraphs.\\n\\n2. Examine each paragraph\\n- Each
      paragraph is identified by a paragraph ID (for example, \\\"P0\\\", \\\"P1\\\",
      etc.), followed by the full text of the paragraph and, optionally, additional
      information about the paragraph, which may be helpful during your analysis.\\n-
      Note that paragraphs are listed in the same order they appear in the original
      document; therefore, context from surrounding paragraphs may influence whether
      a particular paragraph is relevant to an aspect.\\n\\n3. Map paragraphs to aspects\\n-
      A paragraph can address one, multiple, or none of the aspects.\\n- If a paragraph
      clearly relates to an aspect (based on the aspect's name and description), include
      the paragraph's ID and provide a justification, detailing why the paragraph
      is relevant to the aspect.\\n- If a paragraph does not relate to an aspect,
      do not include it under that aspect's list.\\n\\n4. Produce the final answer
      in the specified JSON format\\n- Your output must be a JSON array of objects,
      each object corresponding to a single aspect.\\n- For each aspect (in the order
      they are provided), include:\\n    -- aspect_id: The aspect's unique identifier,
      e.g., \\\"A0\\\".\\n    -- paragraphs: An array of objects for each paragraph
      that addresses or relates to the aspect. Each object should include:\\n        ---
      paragraph_id: The provided paragraph ID, e.g., \\\"P0\\\", \\\"P2\\\".\\n        ---
      justification: A justification of why the paragraph is relevant to the aspect.
      Ensure the justification is specific and directly ties the content of the paragraph
      to the aspect's defining features. Never reference any of the structural IDs
      provided in this prompt (such as aspect IDs like \\\"A0\\\", or paragraph IDs
      like \\\"P0\\\") in the justification.\\n            ---- Justification should
      be brief, i.e. highlight only the essential details.\\n            ---- Justification
      should be no longer than 2 sentences.\\n            ---- Justification should
      be in the original language of the document.\\n    -- If an aspect has no related
      paragraphs, still include it with an empty paragraphs array ([]).\\n- Do not
      add extra commentary, code block markers, or any other formatting beyond the
      JSON array.\\n\\nUse the following answer format as a guide for your final answer
      (remember: no surrounding text or ```json delimiters should be included).\\n\\n======\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"aspect_id\\\": str,\\n        \\\"paragraphs:
      [\\n            {\\n                \\\"paragraph_id\\\": str,\\n                \\\"justification\\\":
      str\\n            },\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n======\\n\\n______\\nDOCUMENT
      ASPECTS:\\n````\\n- Aspect ID: A0\\nAspect name: Parties\\nAspect description:\\nParties
      to the agreement\\n````\\n\\n______\\n\\n------\\nDOCUMENT PARAGRAPHS:\\n''''\\n-
      Paragraph ID: P0\\n~~~\\nParagraph text:\\n5,000 / 5,000\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P1\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P2\\n~~~\\nParagraph text:\\n\u672C\u4FDD\u5BC6\u534F\u8BAE (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D)
      \u4E8E 2024 \u5E74 7 \u6708 16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P3\\n~~~\\nParagraph text:\\n\u7532\u65B9\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P4\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P5\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P6\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P7\\n~~~\\nParagraph text:\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P8\\n~~~\\nParagraph text:\\n\u7535\u8BDD\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P9\\n~~~\\nParagraph text:\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P10\\n~~~\\nParagraph text:\\n\u4E59\u65B9\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P11\\n~~~\\nParagraph text:\\nExample.Com LLC\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P12\\n~~~\\nParagraph text:\\n5678 Random Drive\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P13\\n~~~\\nParagraph text:\\nNew York, NY 00000\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P14\\n~~~\\nParagraph text:\\n\u8054\u7CFB\u4EBA\uFF1AJane Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P15\\n~~~\\nParagraph text:\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P16\\n~~~\\nParagraph text:\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P17\\n~~~\\nParagraph text:\\n1. \u76EE\u7684\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P18\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P19\\n~~~\\nParagraph text:\\n2. \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P20\\n~~~\\nParagraph text:\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P21\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P22\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P23\\n~~~\\nParagraph text:\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P24\\n~~~\\nParagraph text:\\n3. \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P25\\n~~~\\nParagraph text:\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P26\\n~~~\\nParagraph text:\\na. \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P27\\n~~~\\nParagraph text:\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P28\\n~~~\\nParagraph text:\\nc. \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P29\\n~~~\\nParagraph text:\\n4. \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P30\\n~~~\\nParagraph text:\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P31\\n~~~\\nParagraph text:\\na. \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P32\\n~~~\\nParagraph text:\\nb. \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P33\\n~~~\\nParagraph text:\\nc. \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P34\\n~~~\\nParagraph text:\\nd. \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P35\\n~~~\\nParagraph text:\\n6. \u6750\u6599\u8FD4\u8FD8\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P36\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P37\\n~~~\\nParagraph text:\\n7. \u65E0\u8BB8\u53EF\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P38\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P39\\n~~~\\nParagraph text:\\n8. \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P40\\n~~~\\nParagraph text:\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P41\\n~~~\\nParagraph text:\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n~~~\\n''''\\n\\n''''\\n- Paragraph ID: P42\\n~~~\\nParagraph
      text:\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n~~~\\n''''\\n\\n''''\\n- Paragraph
      ID: P43\\n~~~\\nParagraph text:\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P44\\n~~~\\nParagraph text:\\nb. \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P45\\n~~~\\nParagraph text:\\nc. \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P46\\n~~~\\nParagraph text:\\nd. \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P47\\n~~~\\nParagraph text:\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P48\\n~~~\\nParagraph text:\\n_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P49\\n~~~\\nParagraph text:\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P50\\n~~~\\nParagraph text:\\n\u59D3\u540D\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P51\\n~~~\\nParagraph text:\\n\u804C\u52A1\uFF1A_____\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P52\\n~~~\\nParagraph text:\\n\u65E5\u671F\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P53\\n~~~\\nParagraph text:\\nExample.Com LLC\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P54\\n~~~\\nParagraph text:\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P55\\n~~~\\nParagraph text:\\n\u59D3\u540D\uFF1AJane Doe\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P56\\n~~~\\nParagraph text:\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n~~~\\n''''\\n\\n''''\\n-
      Paragraph ID: P57\\n~~~\\nParagraph text:\\n\u65E5\u671F\uFF1A___________________________\\n~~~\\n''''\\n\\n------\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '15211'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n    {\n        \"aspect_id\": \"A0\",\n        \"paragraphs\":
        [\n            {\n                \"paragraph_id\": \"P2\",\n                \"justification\":
        \"\u8be5\u6bb5\u8bf4\u660e\u534f\u8bae\u7531\u4ee5\u4e0b\u5404\u65b9\u7b7e\u7f72\u5e76\u751f\u6548\uff0c\u660e\u786e\u6d89\u53ca\u534f\u8bae\u7684\u5f53\u4e8b\u65b9\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P3\",\n                \"justification\": \"\u8be5\u6bb5\u6807\u660e\u7532\u65b9\uff0c\u6307\u660e\u534f\u8bae\u4e2d\u7684\u4e00\u65b9\u5f53\u4e8b\u4eba\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P10\",\n                \"justification\": \"\u8be5\u6bb5\u6807\u660e\u4e59\u65b9\uff0c\u6307\u660e\u534f\u8bae\u4e2d\u7684\u53e6\u4e00\u65b9\u5f53\u4e8b\u4eba\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P11\",\n                \"justification\": \"\u8be5\u6bb5\u63d0\u4f9b\u4e59\u65b9\u7684\u516c\u53f8\u540d\u79f0\uff0c\u660e\u786e\u4e00\u65b9\u5f53\u4e8b\u4eba\u7684\u8eab\u4efd\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P14\",\n                \"justification\": \"\u8be5\u6bb5\u63d0\u4f9b\u4e59\u65b9\u8054\u7cfb\u4eba\u59d3\u540d\u53ca\u804c\u4f4d\uff0c\u8fdb\u4e00\u6b65\u660e\u786e\u5f53\u4e8b\u65b9\u4fe1\u606f\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P47\",\n                \"justification\": \"\u8be5\u6bb5\u8bf4\u660e\u534f\u8bae\u5404\u65b9\u5df2\u7b7e\u7f72\u534f\u8bae\uff0c\u786e\u8ba4\u5f53\u4e8b\u65b9\u7684\u7b7e\u7f72\u884c\u4e3a\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P49\",\n                \"justification\": \"\u8be5\u6bb5\u4e3a\u7b7e\u7f72\u4eba\u7b7e\u540d\u680f\uff0c\u6d89\u53ca\u5f53\u4e8b\u65b9\u7684\u7b7e\u7f72\u786e\u8ba4\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P53\",\n                \"justification\": \"\u8be5\u6bb5\u518d\u6b21\u63d0\u53ca\u4e59\u65b9\u516c\u53f8\u540d\u79f0\uff0c\u786e\u8ba4\u5f53\u4e8b\u65b9\u8eab\u4efd\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P54\",\n                \"justification\": \"\u8be5\u6bb5\u4e3a\u4e59\u65b9\u7b7e\u7f72\u4eba\u7b7e\u540d\u680f\uff0c\u6d89\u53ca\u5f53\u4e8b\u65b9\u7684\u7b7e\u7f72\u786e\u8ba4\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P55\",\n                \"justification\": \"\u8be5\u6bb5\u63d0\u4f9b\u4e59\u65b9\u7b7e\u7f72\u4eba\u59d3\u540d\uff0c\u660e\u786e\u5f53\u4e8b\u65b9\u7b7e\u7f72\u4eba\u8eab\u4efd\u3002\"\n            },\n            {\n                \"paragraph_id\":
        \"P56\",\n                \"justification\": \"\u8be5\u6bb5\u63d0\u4f9b\u4e59\u65b9\u7b7e\u7f72\u4eba\u804c\u52a1\uff0c\u8fdb\u4e00\u6b65\u660e\u786e\u7b7e\u7f72\u4eba\u8eab\u4efd\u3002\"\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921647, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 447,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3581, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 0}, "total_tokens":
        4028}}'
    headers:
      Content-Length:
      - '3334'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '3354'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not found or there are no items to extract,
      leave the array empty ([]).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified under \\\"Amount of extracted
      items\\\". Each extracted item, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item structure:\\n    -- If a specific
      structure is provided for a concept under \\\"Expected structure,\\\" you must
      follow that structure for all extracted items corresponding to that concept.\\n
      \   -- If a rating scale is provided for a concept under \\\"Rating scale,\\\"
      the extracted item value must be within that scale.\\n    -- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \   -- If there are example items (\\\"Extracted concept examples\\\"), try
      to follow the same style and formatting for your extracted items.\\n    -- When
      extracting string values, retain them in the original language of the document
      without translating them.\\n\\n- Types of extracted items:\\n    -- Each concept
      specifies an \\\"extracted item type\\\" (found under \\\"Concept extracted
      item type\\\"). Ensure your extracted items strictly match that type. Python
      types are provided (e.g., str for string, int for integer, float for floating-point
      number, dict for object, etc.).\\n    -- Do not introduce any extra fields or
      modify the specified structure.\\n\\n- Handling missing or multiple items:\\n
      \   -- If a concept is not mentioned at all, your output should still contain
      an entry for that concept with an empty \\\"extracted_items\\\" array.\\n    --
      For concepts that have an \\\"Available labels:\\\" section: if none of the
      predefined labels apply to the content, leave the \\\"extracted_items\\\" array
      empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            ...\\n        ],\\n    },\\n
      \   ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n- Concept ID: C0\\nConcept
      name: Contract term\\n\\nConcept description:\\nContract term\\n\\nAmount of
      extracted items: This concept may have zero, one, or multiple extracted items.\\n\\nConcept
      extracted item type: str\\n````\\n\\n______\\n\\n------\\nDOCUMENT TEXT:\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '8388'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"\u81ea\u7b7e\u7f72\u4e4b\u65e5\u8d77\u6709\u6548\u671f\u4e3a\u4e94
        (5) \u5e74\"\n        ]\n    }\n]", "refusal": null, "role": "assistant"}}],
        "created": 1749921650, "id": "chatcmpl-DUMMY", "model": "gpt-4.1-mini-2025-04-14",
        "object": "chat.completion", "prompt_filter_results": [{"prompt_index": 0,
        "content_filter_results": {"hate": {"filtered": false, "severity": "safe"},
        "jailbreak": {"filtered": false, "detected": false}, "self_harm": {"filtered":
        false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"},
        "violence": {"filtered": false, "severity": "safe"}}}], "system_fingerprint":
        "fp_178c8d546f", "usage": {"completion_tokens": 41, "completion_tokens_details":
        {"accepted_prediction_tokens": 0, "audio_tokens": 0, "reasoning_tokens": 0,
        "rejected_prediction_tokens": 0}, "prompt_tokens": 1608, "prompt_tokens_details":
        {"audio_tokens": 0, "cached_tokens": 1408}, "total_tokens": 1649}}'
    headers:
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '526'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not found or there are no items to extract,
      leave the array empty ([]).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified under \\\"Amount of extracted
      items\\\". Each extracted item, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item structure:\\n    -- If a specific
      structure is provided for a concept under \\\"Expected structure,\\\" you must
      follow that structure for all extracted items corresponding to that concept.\\n
      \   -- If a rating scale is provided for a concept under \\\"Rating scale,\\\"
      the extracted item value must be within that scale.\\n    -- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \   -- If there are example items (\\\"Extracted concept examples\\\"), try
      to follow the same style and formatting for your extracted items.\\n    -- When
      extracting string values, retain them in the original language of the document
      without translating them.\\n\\n- Types of extracted items:\\n    -- Each concept
      specifies an \\\"extracted item type\\\" (found under \\\"Concept extracted
      item type\\\"). Ensure your extracted items strictly match that type. Python
      types are provided (e.g., str for string, int for integer, float for floating-point
      number, dict for object, etc.).\\n    -- Do not introduce any extra fields or
      modify the specified structure.\\n\\n- Handling missing or multiple items:\\n
      \   -- If a concept is not mentioned at all, your output should still contain
      an entry for that concept with an empty \\\"extracted_items\\\" array.\\n    --
      For concepts that have an \\\"Available labels:\\\" section: if none of the
      predefined labels apply to the content, leave the \\\"extracted_items\\\" array
      empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            ...\\n        ],\\n    },\\n
      \   ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n- Concept ID: C0\\nConcept
      name: Title\\n\\nConcept description:\\nContract title\\n\\nAmount of extracted
      items: This concept may have zero, one, or multiple extracted items.\\n\\nConcept
      extracted item type: str\\n````\\n\\n______\\n\\n------\\nDOCUMENT TEXT:\\n5,000
      / 5,000\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n\\n\u672C\u4FDD\u5BC6\u534F\u8BAE
      (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D) \u4E8E 2024 \u5E74 7 \u6708
      16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n\\n\u7532\u65B9\uFF1A\\n\\n_____\\n_____\\n_____\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n\u7535\u8BDD\uFF1A_____\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n\\n\u4E59\u65B9\uFF1A\\n\\nExample.Com
      LLC\\n5678 Random Drive\\nNew York, NY 00000\\n\u8054\u7CFB\u4EBA\uFF1AJane
      Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n\\n1.
      \u76EE\u7684\uFF1A\\n\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n\\n2.
      \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n3.
      \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n\\na.
      \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n\\nc.
      \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n\\n4.
      \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n\\na.
      \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n\\nb.
      \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n\\nc.
      \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n\\nd.
      \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n6.
      \u6750\u6599\u8FD4\u8FD8\uFF1A\\n\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n\\n7.
      \u65E0\u8BB8\u53EF\uFF1A\\n\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n\\n8.
      \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n\\nb.
      \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n\\nc.
      \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n\\nd.
      \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n\\n_____\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1A_____\\n\u804C\u52A1\uFF1A_____\\n\u65E5\u671F\uFF1A___________________________\\n\\nExample.Com
      LLC\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1AJane
      Doe\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n\u65E5\u671F\uFF1A___________________________\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '12784'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"\u4fdd\u5bc6\u534f\u8bae
        (NDA)\"\n        ]\n    }\n]", "refusal": null, "role": "assistant"}}], "created":
        1749921650, "id": "chatcmpl-DUMMY", "model": "gpt-4.1-mini-2025-04-14", "object":
        "chat.completion", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results":
        {"hate": {"filtered": false, "severity": "safe"}, "jailbreak": {"filtered":
        false, "detected": false}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}}], "system_fingerprint": "fp_178c8d546f", "usage":
        {"completion_tokens": 34, "completion_tokens_details": {"accepted_prediction_tokens":
        0, "audio_tokens": 0, "reasoning_tokens": 0, "rejected_prediction_tokens":
        0}, "prompt_tokens": 2748, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens":
        1408}, "total_tokens": 2782}}'
    headers:
      Content-Length:
      - '1225'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '515'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not found or there are no items to extract,
      leave the array empty ([]).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified under \\\"Amount of extracted
      items\\\". Each extracted item, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item structure:\\n    -- If a specific
      structure is provided for a concept under \\\"Expected structure,\\\" you must
      follow that structure for all extracted items corresponding to that concept.\\n
      \   -- If a rating scale is provided for a concept under \\\"Rating scale,\\\"
      the extracted item value must be within that scale.\\n    -- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \   -- If there are example items (\\\"Extracted concept examples\\\"), try
      to follow the same style and formatting for your extracted items.\\n    -- When
      extracting string values, retain them in the original language of the document
      without translating them.\\n\\n- Types of extracted items:\\n    -- Each concept
      specifies an \\\"extracted item type\\\" (found under \\\"Concept extracted
      item type\\\"). Ensure your extracted items strictly match that type. Python
      types are provided (e.g., str for string, int for integer, float for floating-point
      number, dict for object, etc.).\\n    -- Do not introduce any extra fields or
      modify the specified structure.\\n\\n- Handling missing or multiple items:\\n
      \   -- If a concept is not mentioned at all, your output should still contain
      an entry for that concept with an empty \\\"extracted_items\\\" array.\\n    --
      For concepts that have an \\\"Available labels:\\\" section: if none of the
      predefined labels apply to the content, leave the \\\"extracted_items\\\" array
      empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            ...\\n        ],\\n    },\\n
      \   ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n- Concept ID: C0\\nConcept
      name: Contract party name\\n\\nConcept description:\\nContract party name in
      the contract. Exclude information on individual signatories.\\n\\nAmount of
      extracted items: This concept may have zero, one, or multiple extracted items.\\n\\nConcept
      extracted item type: str\\n````\\n\\n______\\n\\n------\\nDOCUMENT TEXT:\\n\u672C\u4FDD\u5BC6\u534F\u8BAE
      (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D) \u4E8E 2024 \u5E74 7 \u6708
      16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n\\n\u7532\u65B9\uFF1A\\n\\n\u4E59\u65B9\uFF1A\\n\\nExample.Com
      LLC\\n\\n\u8054\u7CFB\u4EBA\uFF1AJane Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\\nExample.Com
      LLC\\n\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\\n\u59D3\u540D\uFF1AJane
      Doe\\n\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '8636'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"Example.Com LLC\"\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921650, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 31,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        1656, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1408},
        "total_tokens": 1687}}'
    headers:
      Content-Length:
      - '1222'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '571'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not found or there are no items to extract,
      leave the array empty ([]).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified under \\\"Amount of extracted
      items\\\". Each extracted item, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item structure:\\n    -- If a specific
      structure is provided for a concept under \\\"Expected structure,\\\" you must
      follow that structure for all extracted items corresponding to that concept.\\n
      \   -- If a rating scale is provided for a concept under \\\"Rating scale,\\\"
      the extracted item value must be within that scale.\\n    -- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \   -- If there are example items (\\\"Extracted concept examples\\\"), try
      to follow the same style and formatting for your extracted items.\\n    -- When
      extracting string values, retain them in the original language of the document
      without translating them.\\n\\n- Types of extracted items:\\n    -- Each concept
      specifies an \\\"extracted item type\\\" (found under \\\"Concept extracted
      item type\\\"). Ensure your extracted items strictly match that type. Python
      types are provided (e.g., str for string, int for integer, float for floating-point
      number, dict for object, etc.).\\n    -- Do not introduce any extra fields or
      modify the specified structure.\\n\\n- Handling missing or multiple items:\\n
      \   -- If a concept is not mentioned at all, your output should still contain
      an entry for that concept with an empty \\\"extracted_items\\\" array.\\n    --
      For concepts that have an \\\"Available labels:\\\" section: if none of the
      predefined labels apply to the content, leave the \\\"extracted_items\\\" array
      empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            ...\\n        ],\\n    },\\n
      \   ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n- Concept ID: C0\\nConcept
      name: Contract party name and role\\n\\nConcept description:\\nContract party
      name and role in the contract. Exclude information on individual signatories.\\n\\nAmount
      of extracted items: This concept may have zero, one, or multiple extracted items.\\n\\nExtracted
      concept examples:\\n- custom_data={} content='Company ABC (Supplier)'\\n\\nConcept
      extracted item type: str\\n````\\n\\n______\\n\\n------\\nDOCUMENT TEXT:\\n\u672C\u4FDD\u5BC6\u534F\u8BAE
      (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D) \u4E8E 2024 \u5E74 7 \u6708
      16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n\\n\u7532\u65B9\uFF1A\\n\\n\u4E59\u65B9\uFF1A\\n\\nExample.Com
      LLC\\n\\n\u8054\u7CFB\u4EBA\uFF1AJane Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\\nExample.Com
      LLC\\n\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\\n\u59D3\u540D\uFF1AJane
      Doe\\n\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '8736'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"Example.Com LLC\"\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921650, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 31,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        1677, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1536},
        "total_tokens": 1708}}'
    headers:
      Content-Length:
      - '1222'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '568'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array of objects with mandatory fields \\\"value\\\" and \\\"justification\\\".
      If the concept is not found or there are no items to extract, leave the array
      empty ([]).\\n        --- Guidance regarding the possible amount of extracted
      items for the concept is specified under \\\"Amount of extracted items\\\".
      Each extracted item's object, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item object structure:\\n    -- value:
      Mandatory field holding the extracted item.\\n        --- If a specific structure
      is provided for a concept under \\\"Expected structure,\\\" the extracted item
      value must follow that structure for all extracted items corresponding to that
      concept.\\n        --- If a rating scale is provided for a concept under \\\"Rating
      scale,\\\" the extracted item value must be within that scale.\\n        ---
      If available labels are provided for a concept under \\\"Available labels,\\\"
      the extracted item value must be a list containing only labels from the predefined
      set. If none of the predefined labels apply, do not extract any items for that
      concept.\\n        --- If there are example items (\\\"Extracted concept examples\\\"),
      the extracted item value should follow the same style and formatting.\\n        ---
      When extracting string values, retain them in the original language of the document
      without translating them.\\n    -- justification: Mandatory field holding a
      justification of why the item was extracted for the concept. Ensure the justification
      is specific and directly ties the extracted item to the concept's defining features.
      Never reference the concept's ID or any of the structural IDs provided in this
      prompt (such as paragraph IDs like \\\"P0\\\", or sentence IDs like \\\"P0-S0\\\")
      in the justification.\\n        --- Justification should be brief, i.e. highlight
      only the essential details.\\n        --- Justification should be no longer
      than 2 sentences.\\n        --- Justification should be in the original language
      of the document.\\n\\n- Types of extracted items:\\n    -- Each concept specifies
      an \\\"extracted item type\\\" (found under \\\"Concept extracted item type\\\").
      Ensure that the value of each of the extracted items for the concept strictly
      matches that type. Python types are provided (e.g., str for string, int for
      integer, float for floating-point number, dict for object, etc.).\\n    -- Do
      not introduce any extra fields or modify the specified structure.\\n\\n- Handling
      missing or multiple items:\\n    -- If a concept is not mentioned at all, your
      output should still contain an entry for that concept with an empty \\\"extracted_items\\\"
      array.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if none of the predefined labels apply to the content, leave the \\\"extracted_items\\\"
      array empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            {\\n                \\\"value\\\":
      ...,\\n                \\\"justification\\\": str\\n            },\\n            ...\\n
      \       ],\\n    },\\n    ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n-
      Concept ID: C0\\nConcept name: Start date\\n\\nConcept description:\\nContract
      start date\\n\\nAmount of extracted items: This concept may have zero, one,
      or multiple extracted items.\\n\\nConcept extracted item type: str\\n````\\n\\n______\\n\\n------\\nDOCUMENT
      TEXT:\\n5,000 / 5,000\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n\\n\u672C\u4FDD\u5BC6\u534F\u8BAE
      (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D) \u4E8E 2024 \u5E74 7 \u6708
      16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n\\n\u7532\u65B9\uFF1A\\n\\n_____\\n_____\\n_____\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n\u7535\u8BDD\uFF1A_____\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n\\n\u4E59\u65B9\uFF1A\\n\\nExample.Com
      LLC\\n5678 Random Drive\\nNew York, NY 00000\\n\u8054\u7CFB\u4EBA\uFF1AJane
      Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n\\n1.
      \u76EE\u7684\uFF1A\\n\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n\\n2.
      \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n3.
      \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n\\na.
      \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n\\nc.
      \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n\\n4.
      \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n\\na.
      \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n\\nb.
      \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n\\nc.
      \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n\\nd.
      \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n6.
      \u6750\u6599\u8FD4\u8FD8\uFF1A\\n\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n\\n7.
      \u65E0\u8BB8\u53EF\uFF1A\\n\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n\\n8.
      \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n\\nb.
      \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n\\nc.
      \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n\\nd.
      \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n\\n_____\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1A_____\\n\u804C\u52A1\uFF1A_____\\n\u65E5\u671F\uFF1A___________________________\\n\\nExample.Com
      LLC\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1AJane
      Doe\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n\u65E5\u671F\uFF1A___________________________\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '13754'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            {\n                \"value\":
        \"2024 \u5e74 7 \u6708 16 \u65e5\",\n                \"justification\": \"\u534f\u8bae\u6587\u672c\u5f00\u5934\u660e\u786e\u6307\u51fa\u672c\u4fdd\u5bc6\u534f\u8bae\u4e8e2024\u5e747\u670816\u65e5\u7b7e\u7f72\u5e76\u751f\u6548\u3002\"\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921650, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 75,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        2924, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 2816},
        "total_tokens": 2999}}'
    headers:
      Content-Length:
      - '1397'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '738'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find document
      text and a list of concepts.\\n\\nYour task is to:\\n1. Read through the document
      text provided.\\n2. Identify whether each concept in the concepts list is addressed
      within the document text.\\n3. For each concept that appears, extract zero or
      more items relevant to that concept. The item format and structure are specified
      for each concept.\\n4. Produce a JSON array containing your extracted data,
      in the provided format.\\n\\nIf a concept is not addressed in the document text,
      you must still include an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list.\\n\\nFollow these additional rules:\\n\\n- Output format:\\nProvide your
      answer in only the following answer format (do not include backticks, code fences,
      or any introductory/explanatory text).\\n\\n- Consistency:\\n    -- Each JSON
      object in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not found or there are no items to extract,
      leave the array empty ([]).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified under \\\"Amount of extracted
      items\\\". Each extracted item, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n\\n- Item structure:\\n    -- If a specific
      structure is provided for a concept under \\\"Expected structure,\\\" you must
      follow that structure for all extracted items corresponding to that concept.\\n
      \   -- If a rating scale is provided for a concept under \\\"Rating scale,\\\"
      the extracted item value must be within that scale.\\n    -- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \   -- If there are example items (\\\"Extracted concept examples\\\"), try
      to follow the same style and formatting for your extracted items.\\n    -- When
      extracting string values, retain them in the original language of the document
      without translating them.\\n\\n- Types of extracted items:\\n    -- Each concept
      specifies an \\\"extracted item type\\\" (found under \\\"Concept extracted
      item type\\\"). Ensure your extracted items strictly match that type. Python
      types are provided (e.g., str for string, int for integer, float for floating-point
      number, dict for object, etc.).\\n    -- Do not introduce any extra fields or
      modify the specified structure.\\n\\n- Handling missing or multiple items:\\n
      \   -- If a concept is not mentioned at all, your output should still contain
      an entry for that concept with an empty \\\"extracted_items\\\" array.\\n    --
      For concepts that have an \\\"Available labels:\\\" section: if none of the
      predefined labels apply to the content, leave the \\\"extracted_items\\\" array
      empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            ...\\n        ],\\n    },\\n
      \   ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n- Concept ID: C0\\nConcept
      name: Key aspects\\n\\nConcept description:\\nNames of key aspects covered in
      the document\\n\\nExpected structure:\\n{\\n  \\\"aspect_names\\\": [\\n    str,\\n
      \   ...\\n  ]\\n}\\n\\nAmount of extracted items: This concept may have zero,
      one, or multiple extracted items.\\n\\nConcept extracted item type: dict\\n````\\n\\n______\\n\\n------\\nDOCUMENT
      TEXT:\\n5,000 / 5,000\\n\u4FDD\u5BC6\u534F\u8BAE (NDA)\\n\\n\u672C\u4FDD\u5BC6\u534F\u8BAE
      (\u4EE5\u4E0B\u7B80\u79F0\u201C\u534F\u8BAE\u201D) \u4E8E 2024 \u5E74 7 \u6708
      16 \u65E5\u7531\u4EE5\u4E0B\u5404\u65B9\u7B7E\u7F72\u5E76\u751F\u6548\uFF1A\\n\\n\u7532\u65B9\uFF1A\\n\\n_____\\n_____\\n_____\\n\u8054\u7CFB\u4EBA\uFF1A_____\\n\u7535\u8BDD\uFF1A_____\\n\u7535\u5B50\u90AE\u4EF6\uFF1A_____\\n\\n\u4E59\u65B9\uFF1A\\n\\nExample.Com
      LLC\\n5678 Random Drive\\nNew York, NY 00000\\n\u8054\u7CFB\u4EBA\uFF1AJane
      Doe\uFF0C\u6267\u884C\u5408\u4F19\u4EBA\\n\u7535\u8BDD\uFF1A(012) 345-6789\\n\u7535\u5B50\u90AE\u4EF6\uFF1Ajane.doe@example.com\\n\\n1.
      \u76EE\u7684\uFF1A\\n\\n\u672C\u534F\u8BAE\u65E8\u5728\u4FDD\u62A4\u53CC\u65B9\u5728\u6709\u5173\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u548C\u4F19\u4F34\u5173\u7CFB\u7684\u8BA8\u8BBA\u548C\u63A5\u89E6\u4E2D\u53EF\u80FD\u62AB\u9732\u7684\u673A\u5BC6\u4FE1\u606F\u3002\\n\\n2.
      \u673A\u5BC6\u4FE1\u606F\u7684\u5B9A\u4E49\uFF1A\\n\\n\u5C31\u672C\u534F\u8BAE\u800C\u8A00\uFF0C\u201C\u673A\u5BC6\u4FE1\u606F\u201D\u662F\u6307\u4EE5\u5404\u79CD\u5F62\u5F0F\u4F20\u8FBE\u7684\u4EFB\u4F55\u548C\u6240\u6709\u975E\u516C\u5F00\u4FE1\u606F\uFF0C\u65E0\u8BBA\u662F\u53E3\u5934\u3001\u4E66\u9762\u3001\u7535\u5B50\u6216\u5176\u4ED6\u5F62\u5F0F\u6216\u5A92\u4F53\uFF0C\u65E0\u8BBA\u662F\u5426\u6807\u8BB0\u3001\u6307\u5B9A\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u6807\u8BC6\u4E3A\u201C\u673A\u5BC6\u201D\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5DF2\u7ECF\u6216\u53EF\u80FD\u88AB\u62AB\u9732\u7ED9\u63A5\u6536\u65B9\u3001\u63A5\u6536\u65B9\u8BBF\u95EE\u6216\u89C2\u5BDF\u5230\uFF0C\u5E76\u4E14
      (i) \u5177\u6709\u5B9E\u9645\u6216\u6F5C\u5728\u7684\u7ECF\u6D4E\u4EF7\u503C\uFF0C\u56E0\u4E3A\u5176\u4ED6\u80FD\u591F\u4ECE\u5176\u62AB\u9732\u6216\u4F7F\u7528\u4E2D\u83B7\u5F97\u7ECF\u6D4E\u4EF7\u503C\u7684\u4EBA\u901A\u5E38\u4E0D\u77E5\u9053\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u5E76\u4E14\u65E0\u6CD5\u901A\u8FC7\u9002\u5F53\u65B9\u5F0F\u8F7B\u6613\u786E\u5B9A\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6216\u8005
      (ii) \u62AB\u9732\u65B9\u5FC5\u987B\u5C3D\u5408\u7406\u52AA\u529B\u6765\u4FDD\u6301\u5176\u79D8\u5BC6\u6027\u548C\u4FDD\u5BC6\u6027\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u7C7B\u522B\uFF1A(1)
      \u5546\u4E1A\u4FE1\u606F\uFF08\u5546\u4E1A\u8BA1\u5212\u3001\u6218\u7565\u548C\u6A21\u5F0F\uFF09\uFF1B(2)
      \u6280\u672F\u4FE1\u606F\uFF08\u6280\u672F\u89C4\u8303\u548C\u6587\u6863\u3001\u7814\u53D1\u6D3B\u52A8\uFF09\uFF1B(3)
      \u5BA2\u6237\u548C\u5E02\u573A\u4FE1\u606F\uFF08\u5BA2\u6237\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u9500\u552E\u5386\u53F2\u548C\u6A21\u5F0F\uFF09\uFF1B(4)
      \u4EBA\u5458\u548C\u5185\u90E8\u4FE1\u606F\uFF08\u5458\u5DE5\u540D\u5355\u548C\u8054\u7CFB\u4FE1\u606F\u3001\u96C7\u4F63\u534F\u8BAE\u548C\u4EBA\u4E8B\u6863\u6848\uFF09\uFF1B(5)
      \u77E5\u8BC6\u4EA7\u6743\uFF08\u5546\u4E1A\u79D8\u5BC6\u548C\u4E13\u6709\u6280\u672F\u3001\u4E13\u5229\u548C\u4E13\u5229\u7533\u8BF7\u3001\u7248\u6743\u548C\u7248\u6743\u7533\u8BF7\u3001\u5546\u6807\u548C\u5546\u6807\u7533\u8BF7\uFF09\uFF1B(6)
      \u6218\u7565\u4FE1\u606F\uFF08\u5E76\u8D2D\u8BA1\u5212\u3001\u7ADE\u4E89\u5206\u6790\u548C\u6218\u7565\uFF09\u3002\u8F6F\u4EF6\u4EE3\u7801\u4E5F\u5E94\u5305\u62EC\u5728\u4FDD\u5BC6\u4FE1\u606F\u4E2D\u3002\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A(a)
      \u9664\u63A5\u6536\u65B9\u6216\u5176\u4EE3\u8868\u62AB\u9732\u5916\uFF0C\u5DF2\u666E\u904D\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\uFF1B(b)
      \u5728\u62AB\u9732\u65B9\u62AB\u9732\u524D\u5DF2\u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\u7684\u4FE1\u606F\uFF1B
      (c) \u4EE5\u975E\u4FDD\u5BC6\u65B9\u5F0F\u4ECE\u62AB\u9732\u65B9\u4EE5\u5916\u7684\u5176\u4ED6\u4EBA\u5904\u63D0\u4F9B\u7ED9\u63A5\u6536\u65B9\uFF0C\u800C\u8BE5\u4EBA\u4E0D\u53D7\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4E49\u52A1\u7EA6\u675F\uFF1B\u6216
      (d) \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\uFF0C\u4E14\u672A\u53C2\u8003\u6216\u4F7F\u7528\u4EFB\u4F55\u4FDD\u5BC6\u4FE1\u606F\u3002\u63A5\u6536\u65B9\u7684\u72D7\u540D\u53EB\u9C8D\u52C3\u3002\\n\\n\u4FE1\u606F\u88AB\u6307\u5B9A\u4E3A\u4FDD\u5BC6\u4FE1\u606F\u5E76\u4E0D\u51B3\u5B9A\u8BE5\u4FE1\u606F\u662F\u5426\u6784\u6210\u9002\u7528\u6CD5\u5F8B\u89C4\u5B9A\u7684\u5546\u4E1A\u79D8\u5BC6\u3002\u6240\u6709\u4FDD\u5BC6\u4FE1\u606F\u4ECD\u4E3A\u62AB\u9732\u65B9\u7684\u4E13\u6709\u8D22\u4EA7\uFF0C\u9664\u672C\u6587\u660E\u786E\u89C4\u5B9A\u5916\uFF0C\u63A5\u6536\u65B9\u65E0\u6743\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u4F7F\u7528\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n3.
      \u63A5\u6536\u65B9\u7684\u4E49\u52A1\uFF1A\\n\\n\u63A5\u6536\u4FDD\u5BC6\u4FE1\u606F\u7684\u4E00\u65B9\uFF08\u201C\u63A5\u6536\u65B9\u201D\uFF09\u5E94\uFF1A\\n\\na.
      \u4FDD\u6301\u4FDD\u5BC6\u4FE1\u606F\u7684\u4FDD\u5BC6\u6027\uFF0C\u672A\u7ECF\u62AB\u9732\u65B9\u4E8B\u5148\u4E66\u9762\u540C\u610F\uFF0C\u4E0D\u5F97\u5411\u4EFB\u4F55\u7B2C\u4E09\u65B9\u62AB\u9732\u3002\\n\\nb.\u4EC5\u5C06\u4FDD\u5BC6\u4FE1\u606F\u7528\u4E8E\u8BC4\u4F30\u6216\u53C2\u4E0E\u6F5C\u5728\u4E1A\u52A1\u5408\u4F5C\u3002\\n\\nc.
      \u91C7\u53D6\u4E00\u5207\u5FC5\u8981\u7684\u9884\u9632\u63AA\u65BD\u4FDD\u62A4\u4FDD\u5BC6\u4FE1\u606F\u7684\u673A\u5BC6\u6027\uFF0C\u8FD9\u4E9B\u9884\u9632\u63AA\u65BD\u4E0D\u5F97\u4F4E\u4E8E\u4FDD\u62A4\u5176\u81EA\u8EAB\u4FDD\u5BC6\u4FE1\u606F\u6240\u91C7\u53D6\u7684\u9884\u9632\u63AA\u65BD\u3002\\n\\n4.
      \u4FDD\u5BC6\u4FE1\u606F\u7684\u6392\u9664\uFF1A\\n\\n\u4FDD\u5BC6\u4FE1\u606F\u4E0D\u5305\u62EC\u4EE5\u4E0B\u4FE1\u606F\uFF1A\\n\\na.
      \u5E76\u975E\u901A\u8FC7\u63A5\u6536\u65B9\u7684\u8FC7\u9519\u884C\u4E3A\u800C\u4E3A\u516C\u4F17\u6240\u77E5\u6216\u4E3A\u516C\u4F17\u6240\u77E5\u7684\u4FE1\u606F\u3002\\n\\nb.
      \u5728\u62AB\u9732\u65F6\u63A5\u6536\u65B9\u5DF2\u7ECF\u77E5\u9053\u7684\u4FE1\u606F\u3002\\n\\nc.
      \u5408\u6CD5\u4ECE\u7B2C\u4E09\u65B9\u83B7\u5F97\u4E14\u4E0D\u8FDD\u53CD\u672C\u534F\u8BAE\u7684\u4FE1\u606F\u3002\\n\\nd.
      \u7531\u63A5\u6536\u65B9\u72EC\u7ACB\u5F00\u53D1\u4E14\u672A\u4F7F\u7528\u6216\u53C2\u8003\u62AB\u9732\u65B9\u7684\u4FDD\u5BC6\u4FE1\u606F\u3002\\n\\n6.
      \u6750\u6599\u8FD4\u8FD8\uFF1A\\n\\n\u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n\\n7.
      \u65E0\u8BB8\u53EF\uFF1A\\n\\n\u672C\u534F\u8BAE\u4E2D\u7684\u4EFB\u4F55\u5185\u5BB9\u5747\u4E0D\u5F97\u89E3\u91CA\u4E3A\u901A\u8FC7\u8BB8\u53EF\u6216\u5176\u4ED6\u65B9\u5F0F\u5411\u63A5\u6536\u65B9\u6388\u4E88\u4EFB\u4F55\u62AB\u9732\u65B9\u673A\u5BC6\u4FE1\u606F\u7684\u6743\u5229\uFF0C\u9664\u975E\u672C\u534F\u8BAE\u660E\u786E\u89C4\u5B9A\u3002\\n\\n8.
      \u9002\u7528\u6CD5\u5F8B\u548C\u4E89\u8BAE\uFF1A\\n\\n\u672C\u534F\u8BAE\u53D7\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u5F8B\u7BA1\u8F96\u5E76\u4F9D\u5176\u89E3\u91CA\uFF0C\u4E0D\u8003\u8651\u5176\u6CD5\u5F8B\u51B2\u7A81\u539F\u5219\u3002\\n\\n\u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n\\n9. \u5176\u4ED6\u4E8B\u9879\uFF1A\\n\\na. \u672C\u534F\u8BAE\u6784\u6210\u53CC\u65B9\u5C31\u672C\u534F\u8BAE\u6807\u7684\u7269\u8FBE\u6210\u7684\u5B8C\u6574\u534F\u8BAE\uFF0C\u5E76\u53D6\u4EE3\u6240\u6709\u4E4B\u524D\u6216\u540C\u671F\u5C31\u8BE5\u6807\u7684\u7269\u8FBE\u6210\u7684\u53E3\u5934\u6216\u4E66\u9762\u534F\u8BAE\u3002\\n\\nb.
      \u5BF9\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u4FEE\u8BA2\u6216\u4FEE\u6539\u5FC5\u987B\u4EE5\u4E66\u9762\u5F62\u5F0F\u8FDB\u884C\u5E76\u7531\u53CC\u65B9\u7B7E\u7F72\u3002\\n\\nc.
      \u5982\u679C\u672C\u534F\u8BAE\u7684\u4EFB\u4F55\u6761\u6B3E\u88AB\u53D1\u73B0\u4E0D\u53EF\u6267\u884C\uFF0C\u5219\u5176\u4F59\u6761\u6B3E\u5E94\u5C3D\u53EF\u80FD\u5168\u9762\u6267\u884C\uFF0C\u4E0D\u53EF\u6267\u884C\u7684\u6761\u6B3E\u5E94\u89C6\u4E3A\u5728\u5141\u8BB8\u4EE5\u6700\u63A5\u8FD1\u53CC\u65B9\u610F\u56FE\u7684\u65B9\u5F0F\u6267\u884C\u6240\u9700\u7684\u6709\u9650\u8303\u56F4\u5185\u8FDB\u884C\u4E86\u4FEE\u6539\u3002\\n\\nd.
      \u62AB\u9732\u65B9\u5E94\u662F\u6267\u884C\u672C\u5408\u540C\u7684\u5408\u9002\u4EBA\u9009\u3002\\n\\n\u7279\u6B64\u8BC1\u660E\uFF0C\u672C\u534F\u8BAE\u5404\u65B9\u5DF2\u4E8E\u4E0A\u8FF0\u65E5\u671F\u7B7E\u7F72\u672C\u4FDD\u5BC6\u534F\u8BAE\u3002\\n\\n_____\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1A_____\\n\u804C\u52A1\uFF1A_____\\n\u65E5\u671F\uFF1A___________________________\\n\\nExample.Com
      LLC\\n\u7B7E\u7F72\u4EBA\uFF1A___________________________\\n\u59D3\u540D\uFF1AJane
      Doe\\n\u804C\u52A1\uFF1A\u6267\u884C\u5408\u4F19\u4EBA\\n\u65E5\u671F\uFF1A___________________________\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '12897'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            {\n                \"aspect_names\":
        [\n                    \"\u76ee\u7684\",\n                    \"\u673a\u5bc6\u4fe1\u606f\u7684\u5b9a\u4e49\",\n                    \"\u63a5\u6536\u65b9\u7684\u4e49\u52a1\",\n                    \"\u4fdd\u5bc6\u4fe1\u606f\u7684\u6392\u9664\",\n                    \"\u6750\u6599\u8fd4\u8fd8\",\n                    \"\u65e0\u8bb8\u53ef\",\n                    \"\u9002\u7528\u6cd5\u5f8b\u548c\u4e89\u8bae\",\n                    \"\u5176\u4ed6\u4e8b\u9879\"\n                ]\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921650, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 92,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        2773, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1408},
        "total_tokens": 2865}}'
    headers:
      Content-Length:
      - '1610'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '808'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"You will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\\n\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n1. Document: A structured or unstructured file
      containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\\n- Contracts: Legal agreements defining terms
      and obligations.\\n- Invoices: Financial documents detailing transactions and
      payments.\\n- Curricula Vitae (CVs): Resumes outlining an individual's professional
      experience and qualifications.\\n- General Documents: Any other types of files
      that may contain text, tables, images, or mixed formats.\\nNote that occasionally
      you may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\\n- Contract Aspects: Payment terms, parties involved, or termination
      clauses.\\n- Invoice Aspects: Due dates, line-item breakdowns, or tax details.\\n-
      CV Aspects: Work experience, education, or skills.\\nYou will analyze aspects
      as instructed, considering their relevance and context within the document.\\n\\n3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\\n- Factual extractions: Such as a penalty clause
      in a contract, a total amount due in an invoice, or a certification in a CV.\\n-
      Analytical insights: Such as risk assessments, compliance evaluations, or pattern
      identifications.\\n- Reasoned conclusions: Such as determining whether a document
      meets specific criteria or answers particular questions.\\n- Interpretative
      judgments: Such as ratings, classifications, or qualitative assessments based
      on document content.\\n\\nGUIDELINES FOR YOUR WORK:\\n- Understand the context:
      Before processing the document, ensure you comprehend the nature of the document
      and the aspects or concepts you need to focus on.\\n- Follow specific instructions:
      Each task will include detailed instructions, such as which aspects or concepts
      to focus on and how the data should be presented.\\n- Maintain accuracy: Provide
      precise extractions and analysis, ensuring your outputs align with the document's
      intent and context.\\n- Adapt to variability: Documents may differ in structure,
      language, or formatting. Be flexible and apply reasoning to handle variations
      effectively.\\n\\nEXPECTED DELIVERABLES:\\n- Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n- Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n- Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n- References (when required): When required by
      the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n\\n\\nBy adhering to this framework,
      you will ensure consistent and high-quality performance across diverse document
      analysis tasks.\"},{\"role\":\"user\",\"content\":\"Below you will find a list
      of document paragraphs (including sentences) and a list of concepts.\\n\\nYour
      task is to:\\n1. Read through the provided document paragraphs and their sentences.\\n
      \   - Each paragraph is identified by a paragraph ID (for example, \\\"P0\\\",
      \\\"P1\\\", etc.), optionally followed by additional information about the paragraph,
      which may be helpful during your analysis.\\n    - Each paragraph includes sentences,
      each identified by a sentence ID (for example, \\\"P0-S0\\\", \\\"P0-S1\\\",
      etc.), followed by the full text of the sentence and, optionally, additional
      information about the sentence, which may be helpful during your analysis.\\n
      \   - Note that paragraphs are listed in the same order they appear in the original
      document.\\n2. Identify whether each concept in the concepts list is addressed
      within the document paragraphs.\\n3. For each concept that appears, extract
      zero or more items relevant to that concept. The item format and structure are
      specified for each concept.\\n4. Produce a JSON array containing your extracted
      data, in the provided format.\\n\\nIf a concept is not addressed in the document
      paragraphs, you must still include an entry in the final JSON output but with
      an empty \\\"extracted_items\\\" list.\\n\\nFollow these additional rules:\\n\\n-
      Output format:\\nProvide your answer in only the following answer format (do
      not include backticks, code fences, or any introductory/explanatory text).\\n\\n-
      Consistency:\\n    -- Each JSON object in the list must have two keys: \\\"concept_id\\\"
      and \\\"extracted_items\\\".\\n    -- The value of \\\"concept_id\\\" must match
      exactly the ID of the concept (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n
      \   -- The value of \\\"extracted_items\\\" must be an array of objects with
      mandatory fields \\\"value\\\", \\\"justification\\\", and \\\"reference_paragraphs\\\".
      If the concept is not found or there are no items to extract, leave the array
      empty ([]).\\n        --- Guidance regarding the possible amount of extracted
      items for the concept is specified under \\\"Amount of extracted items\\\".
      Each extracted item's object, even if there is only one, must be part of the
      \\\"extracted_items\\\" array.\\n        --- The value of \\\"reference_paragraphs\\\"
      must be an array of objects with mandatory fields \\\"reference_paragraph_id\\\",
      which holds the provided ID of the reference paragraph, and \\\"reference_sentence_ids\\\",
      which holds the provided IDs of the reference sentences within the paragraph.
      Note that not every sentence in the paragraph necessarily serves as a relevant
      reference.\\n\\n- Item object structure:\\n    -- value: Mandatory field holding
      the extracted item.\\n        --- If a specific structure is provided for a
      concept under \\\"Expected structure,\\\" the extracted item value must follow
      that structure for all extracted items corresponding to that concept.\\n        ---
      If a rating scale is provided for a concept under \\\"Rating scale,\\\" the
      extracted item value must be within that scale.\\n        --- If available labels
      are provided for a concept under \\\"Available labels,\\\" the extracted item
      value must be a list containing only labels from the predefined set. If none
      of the predefined labels apply, do not extract any items for that concept.\\n
      \       --- If there are example items (\\\"Extracted concept examples\\\"),
      the extracted item value should follow the same style and formatting.\\n        ---
      When extracting string values, retain them in the original language of the document
      without translating them.\\n    -- justification: Mandatory field holding a
      justification of why the item was extracted for the concept. Ensure the justification
      is specific and directly ties the extracted item to the concept's defining features.
      Never reference the concept's ID or any of the structural IDs provided in this
      prompt (such as paragraph IDs like \\\"P0\\\", or sentence IDs like \\\"P0-S0\\\")
      in the justification.\\n        --- Justification should be brief, i.e. highlight
      only the essential details.\\n        --- Justification should be no longer
      than 2 sentences.\\n        --- Justification should be in the original language
      of the document.\\n    -- reference_paragraphs: An array of objects for each
      paragraph based on which the item was extracted for the concept. Each object
      should include:\\n        --- reference_paragraph_id: Mandatory field holding
      the provided ID of the reference paragraph. Each paragraph ID must match exactly
      the provided ID for the paragraph (for example, \\\"P0\\\", \\\"P1\\\", etc.).\\n
      \       --- reference_sentence_ids: Mandatory field holding an array of the
      provided IDs of the sentences within the paragraph, based on which the item
      was extracted for the concept. Each sentence ID must match exactly the provided
      ID for the sentence (for example, \\\"P0-S0\\\", \\\"P0-S2\\\", etc.).\\n\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" (found under \\\"Concept extracted item type\\\"). Ensure that the
      value of each of the extracted items for the concept strictly matches that type.
      Python types are provided (e.g., str for string, int for integer, float for
      floating-point number, dict for object, etc.).\\n    -- Do not introduce any
      extra fields or modify the specified structure.\\n\\n- Handling missing or multiple
      items:\\n    -- If a concept is not mentioned at all, your output should still
      contain an entry for that concept with an empty \\\"extracted_items\\\" array.\\n
      \   -- For concepts that have an \\\"Available labels:\\\" section: if none
      of the predefined labels apply to the content, leave the \\\"extracted_items\\\"
      array empty.\\n    -- For concepts that have an \\\"Available labels:\\\" section:
      if multiple labels apply to the same instance or context, include them all in
      a single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have an \\\"Available labels:\\\"
      section: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n\\n- No additional text:\\n
      \   -- Do not include any headers, explanations, or text outside of the JSON
      array.\\n    -- Do not wrap your JSON response in backticks or any other formatting
      characters.\\n\\n======\\nANSWER FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\":
      str,\\n        \\\"extracted_items: [\\n            {\\n                \\\"value\\\":
      ...,\\n                \\\"justification\\\": str,\\n                \\\"reference_paragraphs\\\":
      [\\n                    {\\n                        \\\"reference_paragraph_id\\\":
      str,\\n                        \\\"reference_sentence_ids\\\": [\\n                            str,\\n
      \                           ...\\n                        ]\\n                    },\\n
      \                   ...\\n                ]\\n            },\\n            ...\\n
      \       ],\\n    },\\n    ...\\n]\\n======\\n\\n______\\nCONCEPTS:\\n````\\n-
      Concept ID: C0\\nConcept name: Duration\\n\\nConcept description:\\nContract
      duration in years\\n\\nAmount of extracted items: This concept may have zero,
      one, or multiple extracted items.\\n\\nConcept extracted item type: int\\n````\\n\\n______\\n\\n------\\nDOCUMENT
      PARAGRAPHS INCLUDING SENTENCES:\\n````\\n- Paragraph ID: P0\\nParagraph sentences:\\n
      \   -- Sentence ID: P0-S0\\n    Sentence text: \u672C\u534F\u8BAE\u7EC8\u6B62\u6216\u7ECF\u8981\u6C42\u540E\uFF0C\u63A5\u6536\u65B9\u5E94\u6839\u636E\u62AB\u9732\u65B9\u7684\u5224\u65AD\uFF0C\u5C06\u6240\u6709\u5305\u542B\u4FDD\u5BC6\u4FE1\u606F\u7684\u6750\u6599\u8FD4\u8FD8\u7ED9\u62AB\u9732\u65B9\u6216\u9500\u6BC1\u3002\\n````\\n\\n````\\n-
      Paragraph ID: P1\\nParagraph sentences:\\n    -- Sentence ID: P1-S0\\n    Sentence
      text: \u6240\u6709\u4E89\u8BAE\u5747\u7531\u52A0\u5229\u798F\u5C3C\u4E9A\u5DDE\u6CD5\u9662\u89E3\u51B3\u3002\\n
      \   -- Sentence ID: P1-S1\\n    Sentence text: \u672C\u534F\u8BAE\u81EA\u7B7E\u7F72\u4E4B\u65E5\u8D77\u6709\u6548\u671F\u4E3A\u4E94
      (5) \u5E74\u3002\\n````\\n\\n------\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '11684'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AsyncAzureOpenAI/Python 1.86.0
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.86.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://DUMMY-ENDPOINT/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            {\n                \"value\":
        5,\n                \"justification\": \"\u534f\u8bae\u660e\u786e\u89c4\u5b9a\u81ea\u7b7e\u7f72\u4e4b\u65e5\u8d77\u6709\u6548\u671f\u4e3a\u4e94\u5e74\uff0c\u76f4\u63a5\u4f53\u73b0\u4e86\u5408\u540c\u7684\u6301\u7eed\u65f6\u95f4\u3002\",\n                \"reference_paragraphs\":
        [\n                    {\n                        \"reference_paragraph_id\":
        \"P1\",\n                        \"reference_sentence_ids\": [\n                            \"P1-S1\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1749921650, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_178c8d546f", "usage": {"completion_tokens": 105,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        2241, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 1280},
        "total_tokens": 2346}}'
    headers:
      Content-Length:
      - '1681'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      cmp-upstream-response-duration:
      - '896'
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
version: 1
